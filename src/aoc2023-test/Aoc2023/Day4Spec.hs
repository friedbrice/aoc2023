module Aoc2023.Day4Spec (spec) where

import Ante.Test
import Aoc2023.Day4

spec :: Spec
spec = do
  let
    mkEx = second (\(x, y, z) -> Just $ Card (CardId x) y z)
    in
    examples "parseCard" (pure . parseCard)
      [ mkEx
          ( "Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53"
          , (1, [41, 48, 83, 86, 17], [83, 86, 6, 31, 17, 9, 48, 53])
          )
      , mkEx
          ( "Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19"
          , (2, [13, 32, 20, 16, 61], [61, 30, 68, 82, 17, 32, 24, 19])
          )
      , mkEx
          ( "Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1"
          , (3, [1, 21, 53, 59, 44], [69, 82, 63, 72, 16, 21, 14, 1])
          )
      , mkEx
          ( "Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83"
          , (4, [41, 92, 73, 84, 69], [59, 84, 76, 51, 58, 5, 54, 83])
          )
      , mkEx
          ( "Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36"
          , (5, [87, 83, 26, 28, 32], [88, 30, 70, 12, 93, 22, 82, 36])
          )
      , mkEx
          ( "Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11"
          , (6, [31, 18, 13, 56, 72], [74, 77, 10, 23, 35, 67, 36, 11])
          )
      ]

  let
    mkEx = first (fromJust . parseCard)
    in
    examples "matchingNumbers" (pure . matchingNumbers)
      [ mkEx
        ( "Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53"
        , [48, 83, 86, 17]
        )
      , mkEx
        ( "Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19"
        , [32, 61]
        )
      , mkEx
        ( "Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1"
        , [1, 21]
        )
      , mkEx
        ( "Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83"
        , [84]
        )
      , mkEx
        ( "Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36"
        , []
        )
      , mkEx
        ( "Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11"
        , []
        )
      ]

  let
    mkEx = first (fromJust . parseCard)
    in
    examples "cardValue" (pure . cardValue)
      [ mkEx
        ( "Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53"
        , 8
        )
      , mkEx
        ( "Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19"
        , 2
        )
      , mkEx
        ( "Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1"
        , 2
        )
      , mkEx
        ( "Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83"
        , 1
        )
      , mkEx
        ( "Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36"
        , 0
        )
      , mkEx
        ( "Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11"
        , 0
        )
      ]

  blackbox "solution" solution
    "Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\n\
    \Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\n\
    \Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\n\
    \Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\n\
    \Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\n\
    \Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11\n"
    "13\n"

  blackbox "solution2" solution2
    "Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\n\
    \Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\n\
    \Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\n\
    \Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\n\
    \Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\n\
    \Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11\n"
    "30\n"

  dressRehersal (Day4 Part1) "23847\n"
  dressRehersal (Day4 Part2) "8570000\n"
